[metadata]
; The name is normally the name of your package.  In this test project it would
; be cs107_package (which is what we have in ./src).  It can be different though
; as in this example.  The name you specify here is what one would have to type
; using `python -m pip install <name>`, while the package name(s) in ./src is
; what one must type using the `import <package name>` statement.  Note that
; PyPI is following PEP8 and converts underscores `_` in the name to hyphens
; `-`.  You can still use `python -m pip install Fall2022_CS107` however.
name = Fall2022_CS107
version = 0.0.2
author = Fabian Wermelinger
author_email = fabianw@seas.harvard.edu
description = CS107/AC207 test package
long_description = file: README.md
long_description_content_type = text/markdown
url = https://code.harvard.edu/CS107/main/tree/master/lecture/code/lecture09/python_project
classifiers =
    Intended Audience :: Developers
    Programming Language :: Python :: 3
    Topic :: Software Development :: Libraries :: Python Modules

[options]
; for our test package we chose to put the source code into `src`
package_dir =
    =src

; required to automatically find our package in `src`
packages = find:

; additional package dependencies (examples): this package requires numpy
install_requires =
    numpy

[options.packages.find]
; additional config required for find above
where = src
