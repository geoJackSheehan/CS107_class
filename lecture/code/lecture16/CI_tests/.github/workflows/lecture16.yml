# This is a basic workflow to help you get started with Actions
# You find out more at: https://docs.github.com/en/actions
name: Lecture16 Continuous Integration Test Coverage (with custom container)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master
  # branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in
# parallel. For more on jobs:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobs
jobs:
  # This workflow contains a single job called "test_coverage"
  test_coverage:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # here we specify the container image that we have built ourselves.  The
    # image already contains the Python environment for our needs and we can
    # skip to install a Python environment and dependencies below.  Procedure is
    # similar for other CI providers.
    # https://hub.docker.com/r/iacs/cs107_lecture16/tags
    container:
      image: iacs/cs107_lecture16:latest

    # Steps represent a sequence of tasks that will be executed as part of the
    # job. For more on steps:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsteps
    steps:
      # Check out your repository under $GITHUB_WORKSPACE (job needs access to it)
      # See: https://github.com/actions/checkout
      - uses: actions/checkout@v3

      # Check what Python installation we are using (installed in custom
      # container)
      - name: Check Python installation
        run: python3 -VV

      # Build and install our package in the container
      - name: Build and install the cs107_project in the container (using PEP517/518)
        run: (python3 -m build --wheel && python3 -m pip install dist/*)

      # Run the test coverage for the build
      - name: Run tests and generate coverage html
        run: (cd tests && ./run_tests.sh CI --cov=cs107_package --cov-report=term-missing)
